import{o as n,c as s,a}from"./app.3fd7882d.js";const t='{"title":"","description":"","frontmatter":{},"relativePath":"projects/angel-docs/src/angel-docs/tests/test_folder_structure.md","lastUpdated":1618362922888}',p={},o=a('<ul><li>Project Name: AngelDocs</li><li>File Name: test_folder_structure.py</li><li>Programmer: Kai Prince</li><li>Date: Tue, Mar 23, 2021</li><li>Description: This file contains tests for the nested folder structure feature.</li></ul><div class="language-python"><pre><code><span class="token keyword">import</span> os\n<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path\n<span class="token keyword">import</span> shutil\n<span class="token keyword">import</span> pytest\n<span class="token keyword">from</span> main <span class="token keyword">import</span> build_docs\n\n\n\n</code></pre></div><p>Copy mock files to temp directory.</p><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>autouse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">test_files_dir</span><span class="token punctuation">(</span>tmp_path<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>\n</code></pre></div><div class="language-python"><pre><code>    path_of_current_module <span class="token operator">=</span> request<span class="token punctuation">.</span>fspath<span class="token punctuation">.</span>dirname\n    FILES_FOLDER <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path_of_current_module<span class="token punctuation">,</span> <span class="token string">&quot;sample&quot;</span><span class="token punctuation">)</span>\n\n\n</code></pre></div><p>Copy files in test uploads folder to temp directory</p><div class="language-python"><pre><code>    shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span>FILES_FOLDER<span class="token punctuation">,</span> tmp_path<span class="token punctuation">,</span> dirs_exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">yield</span> tmp_path\n\n\n</code></pre></div><p>Teardown</p><div class="language-python"><pre><code>\n\n\n</code></pre></div><p>Builds the output folder structure to match the input folder structure.</p><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>scope<span class="token operator">=</span><span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">change_test_dir</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> tmp_path<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>tmp_path<span class="token punctuation">)</span>\n    <span class="token keyword">yield</span> os<span class="token punctuation">.</span>chdir\n    os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>request<span class="token punctuation">.</span>config<span class="token punctuation">.</span>invocation_dir<span class="token punctuation">)</span>\n\n\n<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token string">&quot;working_dir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;source_dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">&quot;project&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        pytest<span class="token punctuation">.</span>param<span class="token punctuation">(</span>\n            <span class="token string">&quot;project&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;../project/&quot;</span><span class="token punctuation">,</span>\n            marks<span class="token operator">=</span>pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skip<span class="token punctuation">(</span><span class="token string">&quot;Walking up guarding not yet implemented.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token string">&quot;project&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token string">&quot;source_paths&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;expected_paths&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>\n                <span class="token string">&quot;setup.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;module/__init__.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;module/file.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;.ignoreme&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;.ignoremetoo/ignored.py&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;**/*.*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">test_folder_nesting</span><span class="token punctuation">(</span>\n    working_dir<span class="token punctuation">,</span>\n    source_dir<span class="token punctuation">,</span>\n    source_paths<span class="token punctuation">,</span>\n    expected_paths<span class="token punctuation">,</span>\n    change_test_dir<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">:</span>\n</code></pre></div><p>Arrange</p><div class="language-python"><pre><code>    <span class="token keyword">if</span> working_dir <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        change_test_dir<span class="token punctuation">(</span>working_dir<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token builtin">callable</span><span class="token punctuation">(</span>source_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        source_dir <span class="token operator">=</span> source_dir<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    sources <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>source_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> source_paths<span class="token punctuation">]</span>\n    output_dir <span class="token operator">=</span> <span class="token string">&quot;output&quot;</span>\n    expected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>output_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>source_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> expected_paths<span class="token punctuation">]</span>\n\n\n</code></pre></div><p>Act</p><div class="language-python"><pre><code>    build_docs<span class="token punctuation">(</span>sources<span class="token punctuation">,</span> output_dir<span class="token punctuation">)</span>\n\n\n</code></pre></div><p>Assert</p><div class="language-python"><pre><code>    <span class="token keyword">for</span> path <span class="token keyword">in</span> expected<span class="token punctuation">:</span>\n        <span class="token keyword">assert</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoreme&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoremetoo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n\n</code></pre></div><p>Builds the output folder structure to match the input folder structure.</p><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token string">&quot;working_dir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;source_dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>absolute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;project&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token string">&quot;source_paths&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;expected_paths&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>\n                <span class="token string">&quot;setup.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;module/__init__.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;module/file.py&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;.ignoreme&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;.ignoremetoo/ignored.py&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;**/*.*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>usefixtures</span><span class="token punctuation">(</span><span class="token string">&quot;change_test_dir&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">test_folder_nesting_absolute_path</span><span class="token punctuation">(</span>\n    working_dir<span class="token punctuation">,</span>\n    source_dir<span class="token punctuation">,</span>\n    source_paths<span class="token punctuation">,</span>\n    expected_paths<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">:</span>\n</code></pre></div><div class="language-python"><pre><code>\n\n</code></pre></div><p>Arrange</p><div class="language-python"><pre><code>    <span class="token keyword">if</span> <span class="token builtin">callable</span><span class="token punctuation">(</span>working_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        working_dir <span class="token operator">=</span> working_dir<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    sources <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>working_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>source_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> source_paths<span class="token punctuation">]</span>\n    output_dir <span class="token operator">=</span> <span class="token string">&quot;output&quot;</span>\n    expected <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>working_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>output_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>source_dir<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> expected_paths\n    <span class="token punctuation">]</span>\n\n\n</code></pre></div><p>Act</p><div class="language-python"><pre><code>    build_docs<span class="token punctuation">(</span>sources<span class="token punctuation">,</span> output_dir<span class="token punctuation">)</span>\n\n\n</code></pre></div><p>Assert</p><div class="language-python"><pre><code>    <span class="token keyword">for</span> path <span class="token keyword">in</span> expected<span class="token punctuation">:</span>\n        <span class="token keyword">assert</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoreme&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoremetoo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n\n</code></pre></div><p>Resursively searches the children when given a folder.</p><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token string">&quot;source_paths&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;expected_paths&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;project&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span><span class="token string">&quot;setup.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/__init__.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;module/file.md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>usefixtures</span><span class="token punctuation">(</span><span class="token string">&quot;change_test_dir&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">test_recurse_folder</span><span class="token punctuation">(</span>source_paths<span class="token punctuation">,</span> expected_paths<span class="token punctuation">)</span><span class="token punctuation">:</span>\n</code></pre></div><div class="language-python"><pre><code>\n\n</code></pre></div><p>Arrange</p><div class="language-python"><pre><code>    output_dir <span class="token operator">=</span> <span class="token string">&quot;output&quot;</span>\n    expected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>output_dir<span class="token punctuation">}</span></span><span class="token string">/project/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> expected_paths<span class="token punctuation">]</span>\n\n\n</code></pre></div><p>Act</p><div class="language-python"><pre><code>    build_docs<span class="token punctuation">(</span>source_paths<span class="token punctuation">,</span> output_dir<span class="token punctuation">)</span>\n\n\n</code></pre></div><p>Assert</p><div class="language-python"><pre><code>    <span class="token keyword">for</span> path <span class="token keyword">in</span> expected<span class="token punctuation">:</span>\n        <span class="token keyword">assert</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoreme&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span><span class="token string">&quot;output/.ignoremetoo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n</code></pre></div>',35);p.render=function(a,t,p,c,e,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
