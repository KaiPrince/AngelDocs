import{o as n,c as s,a}from"./app.368f36a2.js";const t='{"title":"","description":"","frontmatter":{},"relativePath":"projects/angel-docs/src/angel-docs/tests/test_ignore_empty_files.md","lastUpdated":1619018302105}',p={},e=a('<ul><li>Project Name: Angel-Docs</li><li>File Name: test_ignore_empty_files.py</li><li>Programmer: Kai Prince</li><li>Date: Tue, Apr 20, 2021</li><li>Description: This file contains tests for the ignore empty files feature.</li></ul><div class="language-python"><pre><code>\n<span class="token keyword">import</span> pytest\n<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path\n<span class="token keyword">from</span> main <span class="token keyword">import</span> build_docs<span class="token punctuation">,</span> resolve_file_sources\n\n\n\n</code></pre></div><p>Does not include empty generated files in output.</p><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>usefixtures</span><span class="token punctuation">(</span><span class="token string">&quot;change_test_dir&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">test_ignore_empty_files</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n</code></pre></div><div class="language-python"><pre><code>\n\n</code></pre></div><p>Arrange</p><div class="language-python"><pre><code>    output_dir <span class="token operator">=</span> <span class="token string">&quot;output&quot;</span>\n    source_paths <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;project&quot;</span><span class="token punctuation">]</span>\n    expected_not_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;empty_file.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unsupported_type.md&quot;</span><span class="token punctuation">]</span>\n    expected_not_paths <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>output_dir<span class="token punctuation">}</span></span><span class="token string">/project/</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> path <span class="token keyword">in</span> expected_not_files<span class="token punctuation">]</span>\n\n\n</code></pre></div><p>Act</p><div class="language-python"><pre><code>    files <span class="token operator">=</span> resolve_file_sources<span class="token punctuation">(</span>source_paths<span class="token punctuation">)</span>\n    build_docs<span class="token punctuation">(</span>files<span class="token punctuation">,</span> output_dir<span class="token punctuation">)</span>\n\n\n</code></pre></div><p>Assert</p><div class="language-python"><pre><code>    <span class="token keyword">for</span> path <span class="token keyword">in</span> expected_not_paths<span class="token punctuation">:</span>\n        <span class="token keyword">assert</span> <span class="token keyword">not</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n</code></pre></div>',11);p.render=function(a,t,p,o,c,i){return n(),s("div",null,[e])};export default p;export{t as __pageData};
